buildscript {
    ext.kotlin_version = '1.1.4-3'
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

plugins {
    id 'maven'
    id 'org.jetbrains.kotlin.jvm' version '1.3.21'
}

group 'red.medusa'
version '1.0'

repositories {
    mavenCentral()
}

dependencies {
    compile 'no.tornado:tornadofx:1.7.19'
    testCompile 'junit:junit:4.11'
    testCompile "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}
tasks.withType(Javadoc) {
    options.encoding = "UTF-8"
}

def localMavenRepo = project.hasProperty("localMavenRepository") ?
        new File(project.getProperties().get("localMavenRepository").toString()).absolutePath :
        new File(System.getProperty('user.home'), '.m2/repository').absolutePath

uploadArchives {
    outputs.upToDateWhen { false }
    repositories {
        mavenDeployer {
            repository(url: 'file://' + localMavenRepo)
            pom.version = '1.0'
            pom.artifactId = 'markdown-panel'
        }
    }
}

